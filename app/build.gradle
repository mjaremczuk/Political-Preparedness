apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'androidx.navigation.safeargs'

android {
    namespace 'com.github.mjaremczuk.politicalpreparedness'

    compileSdkVersion 33
    buildFeatures {
        dataBinding true
    }

    def properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())

    defaultConfig {
        applicationId 'com.github.mjaremczuk.politicalpreparedness'
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 3
        versionName "1.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
        buildConfigField("String", "API_KEY", "\"${properties.getProperty("api_key")}\"")
    }

    signingConfigs {
        release {
            keyAlias = properties["keyAlias"]
            keyPassword = properties["keyPassword"]
            storeFile = file(properties["storeFile"])
            storePassword = properties["storePassword"]
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable true
            buildConfigField("String", "API_KEY", "\"${properties.getProperty("api_key")}\"")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    configurations.all {
        resolutionStrategy {
            exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"

        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation platform('com.google.firebase:firebase-bom:28.1.0')

    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$version_kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$version_kotlin_serialization"
    implementation "androidx.test.espresso:espresso-idling-resource:$version_espresso"

    // Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"

    // ViewModel and LiveData
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$version_lifecycle_extensions"

    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-compiler:$version_lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle_extensions"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"

    // Core with Ktx
    implementation "androidx.core:core-ktx:$version_core"

//    implementation "org.koin:koin-android:$version_koin"
    implementation "io.insert-koin:koin-core:$version_koin"
    implementation "io.insert-koin:koin-android:$version_koin"
//    implementation "org.koin:koin-androidx-viewmodel:$version_koin"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit: $version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"
    implementation("com.squareup.okhttp3:logging-interceptor:4.9.0")

    // Moshi
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"
    implementation "com.squareup.moshi:moshi-adapters:$version_moshi"
//    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.6.0'

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.5.2'

    //Room
    implementation "androidx.room:room-runtime:$version_room"
    implementation "androidx.room:room-ktx:$version_room"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    kapt "androidx.room:room-compiler:$version_room"

    // Location
    implementation "com.google.android.gms:play-services-location:$version_play_services_location"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$version_junit"
    testImplementation "org.hamcrest:hamcrest-all:$version_hamcrest"
    testImplementation "androidx.arch.core:core-testing:$version_arch_testing"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_kotlin_coroutines"
    testImplementation "org.robolectric:robolectric:$version_robolectric"
    testImplementation "com.google.truth:truth:$version_truth"
    testImplementation "org.mockito:mockito-core:$version_mockito"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$version_androidx_test_core"
    testImplementation "androidx.test.ext:junit-ktx:$version_androidx_test_ext_kotlin_runner"
    testImplementation "androidx.test:rules:$version_androidx_test_rules"


    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test:core-ktx:$version_androidx_test_core"
    androidTestImplementation "androidx.test.ext:junit-ktx:$version_androidx_test_ext_kotlin_runner"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_kotlin_coroutines"
    androidTestImplementation "androidx.test:rules:$version_androidx_test_rules"
    androidTestImplementation "androidx.room:room-testing:$version_room"
    androidTestImplementation "androidx.arch.core:core-testing:$version_arch_testing"
    androidTestImplementation "org.robolectric:annotations:$version_robolectric"
    androidTestImplementation "androidx.test.espresso:espresso-core:$version_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$version_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$version_espresso"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$version_espresso"
    androidTestImplementation "junit:junit:$version_junit"

    androidTestImplementation "org.mockito:mockito-core:$version_mockito"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$version_dex_maker"
    testImplementation("io.insert-koin:koin-test:$version_koin") { exclude group: 'org.mockito' }

    debugImplementation "androidx.fragment:fragment-testing:$version_fragment"
    debugImplementation "androidx.test:core:$version_androidx_test_core"
    implementation "androidx.fragment:fragment-ktx:$version_fragment"
    implementation "androidx.activity:activity-ktx:$version_activity"

    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestUtil 'androidx.test:orchestrator:1.3.0'
}
apply plugin: 'com.google.gms.google-services'